{"version":3,"sources":["componentes/Header.js","componentes/Error.js","componentes/Formulario.js","componentes/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","ciudad","pais","useState","error","guardarError","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","coord","parseFloat","temp","toFixed","lon","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarApi","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7abe07cf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n            <nav>\r\n                <div className=\"nav-wrapper light-blue darken-2\">\r\n                    <a href=\"#!\" className = \"brand-logo\">{titulo}</a>\r\n                </div>\r\n            </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst  Error = ({mensaje}) => {\r\n    return ( \r\n        <p className=\"red darken-4 error\">{mensaje}</p>\r\n    );\r\n}\r\n\r\nexport default  Error;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\n\r\nconst Formulario = ({busqueda,guardarBusqueda,guardarConsultar}) => {\r\n\r\n    const {ciudad,pais}= busqueda;\r\n\r\n    const[error,guardarError] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(ciudad.trim() === \"\" || pais.trim() === \"\"){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        guardarConsultar(true);\r\n\r\n    \r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit = {handleSubmit}\r\n        >\r\n        {error ? <Error mensaje = \"Todos los campos son obligatorios\" /> : null}\r\n            <div className=\"input-field col s12\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"ciudad\"\r\n                    id=\"ciudad\"\r\n                    value = {ciudad}\r\n                    onChange = {handleChange}\r\n                />\r\n                <label htmlFor=\"ciudad\">Ciudad:</label>\r\n            </div>\r\n            <div className=\"input-fiel col s12\">\r\n                <select\r\n                    name=\"pais\"\r\n                    id=\"pais\"\r\n                    value= {pais}\r\n                    onChange = {handleChange}\r\n                >\r\n                    <option value=\"\">--Seleccione un pais--</option>\r\n                    <option value=\"US\">Estados Unidos</option>\r\n                    <option value=\"MX\">México</option>\r\n                    <option value=\"AR\">Argentina</option>\r\n                    <option value=\"CO\">Colombia</option>\r\n                    <option value=\"CR\">Costa Rica</option>\r\n                    <option value=\"ES\">España</option>\r\n                    <option value=\"PE\">Perú</option>\r\n                </select>\r\n                <label htmlFor=\"pais\">Pais:</label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4\"\r\n                    value=\"Buscar Clima\"\r\n                    />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Clima = ({resultado}) => {\r\n\r\n    const {name,main,coord} = resultado;\r\n    let kelvin = 273.15;\r\n\r\n    if(!name) return null;\r\n    return ( \r\n        <div className=\"card-panel white col s12\">\r\n            <h2>{name}</h2>\r\n            \r\n            <p>Temperatura actual :{parseFloat(main.temp -kelvin).toFixed(0)}<span>&#x2103;</span></p>\r\n            <p>Latitud:{coord.lon}°</p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clima;","import React, { Fragment ,useState,useEffect } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Clima from './componentes/Clima';\nimport Error from './componentes/Error';\n\nfunction App() {\n\n  const[busqueda,guardarBusqueda] = useState({\n    ciudad:'',\n    pais:''\n  });\n  const [consultar,guardarConsultar] = useState(false);\n  const [resultado,guardarResultado] = useState({});\n  const [error,guardarError] = useState(false);\n\n  \n  const {ciudad,pais} = busqueda;\n\n  useEffect(() => {\n    const consultarApi = async() => {\n      if(consultar){\n        const appId = \"837de784108467e325fe08140a820b1d\";\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&APPID=${appId}`;\n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        guardarResultado(resultado);\n        if(resultado.cod === \"404\"){\n          guardarError(true);\n        }else{\n          guardarError(false)\n        }\n      }\n    }\n    consultarApi();\n  },[consultar,ciudad,pais]);\n\n  let componente;\n  if(error){\n    componente = <Error mensaje= \"City not found\" />\n  }else{\n    componente =   <Clima \n                    resultado = {resultado}\n                  /> \n  }\n\n\n  return (\n    <Fragment>\n      <div>\n        <Header \n          titulo = \"React Clima\"\n        />  \n      </div>\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario \n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar = {guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">\n              {componente}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}